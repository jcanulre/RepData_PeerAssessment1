ccontributors()
ccontributors()
contributors()
contributors()
a <- 3+4
a
summary(a)
setwd("~/repositories/RepData_PeerAssessment1")
pwd()
getpwd()
read.csv("./activity.csv")
?data()
data("AirPassengers")
dat <- read.csv("activity.csv")
View(dat)
View(dat)
summary(dat)
View(dat)
class(a)
class(dat)
names(dat)
names(dat$steps)
class(dat$steps)
class(dat$date)
class(dat$interval)
?hist()
hist(dat$steps)
hist(~dat$steps*dat$date)
hist(dat$steps*dat$date)
hist(dat$steps~dat$date)
class(dat)
class(dat$steps)
?table()
table(dat)
table(dat$date, dat$steps)
table(dat$date)
summary(table(dat$date))
hist(table(dat$date))
a <- table(dat$date)
a
rm(a)
rm(AirPassengers)
dim(table(dat$date))
a<-table(dat$date)
a[1]
a[1][1]
a[1][2]
hist(factor(table(dat$date))
)
?tapply
table(dat$date)
hist(table(dat$date))
hist(t(table(dat$date)))
plot(factor(table(dat$date)))
plot(table(dat$date))
hist(table(dat$date))
tapply(dat$steps, dat$date, sum)
a <- tapply(dat$steps, dat$date, sum)
summary(a)
a
dim(a)
a[1]
a[1][2]
a[1][1]
a[[1]]
a[[1,1]]
a[[1,2]]
a[[1]][[1]]
a[[1]][[2]]
a[1,[1]]
a <- tapply(dat$steps, dat$date, sum)
a[1,2]
a[1,1]
a[[1]]
a[[2]]
a[[3]]
plot(dat$date, a)
a
a <- tapply(dat$steps, dat$date, sum, simplify=FALSE)
a
a[1][1]
a[[1]
]
a[[1]]
x<-unique(dat$date)
x
a <- tapply(dat$steps, dat$date, sum)
plot(x,a)
attach(iris)
tapply(iris$Petal.Length, Species, mean)
b<-tapply(iris$Petal.Length, Species, mean)
b[[1]]
b[[2]]
b[´setosa`
]
names(iris)
b["Sepal.Length"]
b[["Sepal.Length"]]
b[['Sepal.Length']]
b[[Sepal.Length]]
b
class(b)
b[|]
b[1]
hist(b)
barplot(b)
hist(b)
x
a
a[1]
a[[1]]
a[[2]]
class(a[[2]])
aa <- as.vector(a)
aa
plot(x, aa)
class(a)
class(aa)
a[[1]]
a[[2]]
a[[1,1]]
aa
x
aa
hist(aa)
steps
detach(iris)
rm(b)
stepsAday <- tapply(dat$steps, dat$date, sum)
stepsAday <- as.vector(tapply(dat$steps, dat$date, sum))
hist(stepsAday, xlab="Steps taken", main="Histogram of Total Number of Steps Taken Each Day")
rm(aa)
rm(x)
rm(a)
stepsAdays <- as.vector(tapply(dat$steps, dat$date, sum, na.rm=TRUE))
rm(stepsAdays)
stepsAday <- as.vector(tapply(dat$steps, dat$date, sum, na.rm=TRUE))
hist(stepsAday, xlab="Steps taken", main="Histogram of Total Number of Steps Taken Each Day")
meanPerDay <- tapply(dat$steps, dat$date, mean)
meanPerDay <- tapply(dat$steps, dat$date, mean, na.rm=TRUE)
meanPerDay
print(meanPerDay)
medianPerDay <- tapply(dat$steps, dat$date, median, na.rm=TRUE)
medianPerDay
medianPerDay <- tapply(dat$steps, dat$date, median(na.rm=TRUE))
medianPerDay <- tapply(dat$steps, dat$date, median(dat$steps,na.rm=TRUE))
medianPerDay <- tapply(dat$steps, dat$date, median, na.rm=TRUE)
mean(dat$steps, na.rm=TRUE)
mean(dat$steps)
mean(dat$steps, na.rm=TRUE)
plot(dat$interval, mean(dat$steps, na.rm=TRUE))
plot(dat$interval, mean(dat$steps, na.rm=TRUE), type="l")
meanAcrossDays <- mean(dat$steps, na.rm=TRUE)
plot(dat$interval, meanAcrossDays, type="l")
plot(dat$interval, meanAcrossDays, type="l")
rm(meanAcrossDays)
meanSteps<-tapply(dat$steps, dat$date, mean, na.rm=TRUE)
meanSteps<-tapply(dat$steps, dat$interval, mean, na.rm=TRUE)
meanSteps
names(meanSteps)
intervals <- strptime(sprintf("%04d", as.numeric(names(meanSteps))), format="%H%M")
plot(intervals, meanSteps, type="l")
max(meanSteps)
which.max(meanSteps)
meanSteps(835)
meanSteps[[835]]
meanSteps[["1040"]]
meanSteps[104]
which.max(meanSteps[[1]])
which.max(meanSteps[[2]])
which.max(meanSteps[1)
which.max(meanSteps[1])
which.max(meanSteps[[1])
which.max(meanSteps[[1]])
meanStepsInterval<-tapply(dat$steps, dat$interval, mean, na.rm=TRUE)
rm(stepsAday)
rm(meanSteps)
which.max(meanStepsInterval)[[1]]
which.max(meanStepsInterval)[[1]][[1]]
which.max(meanStepsInterval)[1]
which.max(meanStepsInterval)[1][1]
which.max(meanStepsInterval)[1][2]
which.max(meanStepsInterval)[[1]
]
meanStepsInterval[which.max(meanStepsInterval)[[1]]]
meanStepsInterval[which.max(meanStepsInterval)[[1]],1]
meanStepsInterval<-tapply(dat$steps, dat$interval, mean, na.rm=TRUE)
meansStepsVector <- as.vector(meanStepsInterval)
meansStepsVector
rm(meansStepsVector)
meanStepsInterval
meanStepsInterval$1
meanStepsInterval$'1
]
]]
))
=
<- 1
meanStepsInterval<-tapply(dat$steps, dat$interval, mean, na.rm=TRUE)
meanStepsInterval<-tapply(dat$steps, dat$interval, mean, na.rm=TRUE)
""
´
$
#
&
))
]]]]
meanStepsInterval<-tapply(dat$steps, dat$interval, mean, na.rm=TRUE)
stop()
stop()
ls()
getwd()
is.NA(dat$steps)
is.na(dat$steps)
length(is.na(dat$steps))
dim(dat)
length(!is.na(dat$steps))
complete.cases(dat)
dat[complete.cases(dat)]
dat[complete.cases(dat),]
a <- complete.cases(dat)
a
rm(a)
nonmissing <- complete.cases(dat)
dat[nonmissing,]
dat[nonmissing,]
length(dat[nonmissing,])
dat[dat$steps!=NA,]
length(dat[dat$steps!=NA,])
length(!nonmissing)
length(nonmissing)
length(nonmissing==TRUE)
nonmissing
nonmissing[1]
nonmissing[2]
nonmissing[9401]
good <- complete.cases(dat)
rm(nonmissing)
dat[good]
dat[good,]
length(dat[good,])
dat$steps==NA
dat$steps[1,]
dat$steps
dat$steps[1,]
is.na(data())
is.na(dat())
is.na(dat
)
is.na(dat$steps)
length(dat[!is.na(dat$steps),])
b <- dat[!is.na(dat$steps),]
b
View(b)
complete.cases(dat)
length(dat[complete.cases(dat),])
dim(dat[complete.cases(dat),])
dim(dat[complete.cases(dat),])[1]
dim(dat[!complete.cases(dat),])[1]
15264+2304
str(meanStepsInterval)
summary(meanStepsInterval)
summary(meanStepsInterval)[1]
summary(meanStepsInterval)[6]
summary(meanStepsInterval)[6][2]
summary(meanStepsInterval)[6][1]
dim(meanStepsInterval)
meanStepsInterval[1]
meanStepsInterval[2]
names(meanStepsInterval)
names(meanStepsInterval)[1]
names(meanStepsInterval)[2]
"5" == names(meanStepsInterval)[2]
names(meanStepsInterval)[288]
str(meanStepsInterval)
meanStepsInterval[1]
meanStepsInterval[[1]
]
meanStepsInterval[[1]]
class(dat$interval)
as.integer(names(meanStepsInterval)[288])
meanStepsInterval$0
meanStepsInterval$"0"
names(meanStepsInterval)
names(meanStepsInterval)[1]
which(names(meanStepsInterval)==as.factor(dat$interval))
table(dat$interval)
table(dat$interval, dat$steps)
dim(table(dat$interval, dat$steps))
dim(table(dat$interval, dat$date))
table(dat$interval, dat$date)
dim(names(meanStepsInterval))
names(meanStepsInterval)[1]
names(meanStepsInterval)
as.integer(names(meanStepsInterval))
as.integer(names(meanStepsInterval))[1]
meanStepsInterval[[1:10]]
meanStepsInterval[[1]]
meanStepsInterval[[2]]
meanStepsInterval[[]]
meanStepsInterval
var_interval <- as.vector(meanStepsInterval)
rm(good)
num_interval <- as.integer(names(meanStepsInterval))
interval_avg <- as.vector(meanStepsInterval)
rm(var_interval)
new_dataframe <- data.frame(interval=num_interval, steps_avg = interval_avg)
View(new_dataframe)
mergedData <- merge(dat, new_dataframe, by = c("interval")
)
View(mergedData)
other <- aggregate(dat$steps, list(avgSteps=dat$interval), mean)
View(other)
rm(other)
mergedData$steps
mergedData$steps[1]
mergedData$steps[2]
mergedData$steps[3]
mergedData$steps[]
mergedData$steps[]==NA
mergedData <- merge(dat, new_dataframe, by = c("interval")
)
mergedData$
steps
mergedData$steps[:]
mergedData$steps[1:dim(mergedData)]==NA
mergedData$steps[1:dim(mergedData)]
mergedData$steps[1:dim(mergedData,1)]
length(mergedData)
dim(mergedData)
dim(mergedData)[1]
dim(mergedData)
mergedData$steps[1]
mergedData$steps[1]==NA
complete.cases(mergedData$steps[1])
complete.cases(mergedData$steps[2])
complete.cases(mergedData$steps[3])
mergedData$steps[1]
mergedData$steps[2]
mergedData$steps[3]
mergedData$steps[4]
mergedData$steps[1] == NA
mergedData$steps[1] == 'NA'
is.na(mergedData$steps[1])
is.na(mergedData$steps[2])
mergedData$steps_avg <- NULL
dat <- mergedData
mergedData <- merge(dat, new_dataframe, by = c("interval"))
dim(mergedData[1])
dim(mergedData)[1]
for (i in 1:dim(mergedData)[1]) {
}
for (i in 1:dim(mergedData)[1]) {
if (is.na(mergedData$steps[i])) {
mergedData$steps[i]<-mergedData$stepsAVG[i]
}
}
ls()
rm(ls())
rm(c(ls())
)
rm(c(b))
rm(c("b", "dat"))
rm(b)
rm(dat)
rm(i)
rm(interval_avg)
rm(intervals)
rm(meanPerDay)
rm(meanStepsInterval)
rm(num_interval)
rm(mergedData)
rm(new_dataframe)
rm(medianPerDay)
dat <- read.csv("activity.csv")
stepsAday <- as.vector(tapply(dat$steps, dat$date, sum, na.rm=TRUE))
hist(stepsAday, xlab="Steps taken", main="Histogram of Total Number of Steps Taken Each Day")
meanPerDay <- tapply(dat$steps, dat$date, mean, na.rm=TRUE)
print(meanPerDay)
medianPerDay <- tapply(dat$steps, dat$date, median, na.rm=TRUE)
print(medianPerDay)
meanStepsInterval<-tapply(dat$steps, dat$interval, mean, na.rm=TRUE)
intervalname <- strptime(sprintf("%04d", as.numeric(names(meanStepsInterval))), format="%H%M")
plot(intervalname, meanStepsInterval, type="l", xlab="Time Interval", ylab="Mean steps")
which.max(meanStepsInterval)
dim(dat[!complete.cases(dat),])[1]
numInterval <- as.integer(names(meanStepsInterval))
stepsAvgVar <- as.vector(meanStepsInterval)
newDataframe <- data.frame(interval=numInterval, stepsAvg = stepsAvgVar)
View(newDataframe)
mergedData <- merge(dat, newDataframe, by = c("interval"))
View(mergedData)
dim(mergedData)[1]
View(mergedData)
for (i in 1:dim(mergedData)[1]) {
if (is.na(mergedData$steps[i])) mergedData$steps[i]<-mergedData$stepsAVG[i]
}
mergedData$stepsAvg[i]
mergedData$steps[i]
is.na(mergedData$steps[i])
mergedData$steps[i]<-mergedData$stepsAVG[i]
class(nergeData$steps)
class(mergedData$steps)
class(mergedData$stepsAVG)
class(mergedData$stepsAvg)
mergedData$steps[i]<-mergedData$stepsAvg[i]
i
for (i in 1:dim(mergedData)[1]) {
if (is.na(mergedData$steps[i])) mergedData$steps[i]<-mergedData$stepsAvg[i]
}
#attribute stepsAvg is removed
mergedData$stepsAvg <- NULL
dat <- mergedData
```
mergedData
ddat
dat
dat <- mergedData
View(mergedData)
View(newDataframe)
View(mergedData)
exit()
close()
quit()
